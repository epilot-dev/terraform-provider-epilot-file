// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"errors"
	"github.com/epilot-dev/terraform-provider-epilot-file/internal/sdk/pkg/utils"
)

type SaveFilePayloadType string

const (
	SaveFilePayloadTypeSaveS3FilePayload     SaveFilePayloadType = "SaveS3FilePayload"
	SaveFilePayloadTypeSaveCustomFilePayload SaveFilePayloadType = "SaveCustomFilePayload"
)

type SaveFilePayload struct {
	SaveS3FilePayload     *SaveS3FilePayload
	SaveCustomFilePayload *SaveCustomFilePayload

	Type SaveFilePayloadType
}

func CreateSaveFilePayloadSaveS3FilePayload(saveS3FilePayload SaveS3FilePayload) SaveFilePayload {
	typ := SaveFilePayloadTypeSaveS3FilePayload

	return SaveFilePayload{
		SaveS3FilePayload: &saveS3FilePayload,
		Type:              typ,
	}
}

func CreateSaveFilePayloadSaveCustomFilePayload(saveCustomFilePayload SaveCustomFilePayload) SaveFilePayload {
	typ := SaveFilePayloadTypeSaveCustomFilePayload

	return SaveFilePayload{
		SaveCustomFilePayload: &saveCustomFilePayload,
		Type:                  typ,
	}
}

func (u *SaveFilePayload) UnmarshalJSON(data []byte) error {

	saveS3FilePayload := new(SaveS3FilePayload)
	if err := utils.UnmarshalJSON(data, &saveS3FilePayload, "", true, true); err == nil {
		u.SaveS3FilePayload = saveS3FilePayload
		u.Type = SaveFilePayloadTypeSaveS3FilePayload
		return nil
	}

	saveCustomFilePayload := new(SaveCustomFilePayload)
	if err := utils.UnmarshalJSON(data, &saveCustomFilePayload, "", true, true); err == nil {
		u.SaveCustomFilePayload = saveCustomFilePayload
		u.Type = SaveFilePayloadTypeSaveCustomFilePayload
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SaveFilePayload) MarshalJSON() ([]byte, error) {
	if u.SaveS3FilePayload != nil {
		return utils.MarshalJSON(u.SaveS3FilePayload, "", true)
	}

	if u.SaveCustomFilePayload != nil {
		return utils.MarshalJSON(u.SaveCustomFilePayload, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
